
limit_req_zone $request_uri zone=by_uri:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=by_ip:10m rate=60r/m;

server {
	listen   80; ## listen for ipv4; this line is default and implied
	listen   [::]:80 default ipv6only=on; ## listen for ipv6

	root /var/www/html;
	index index.php index.html index.htm;

	# Make site accessible from http://localhost/
	server_name _;
	sendfile off;

	# Add stdout logging
	#error_log /dev/stdout info;
	access_log /dev/stdout custom;

	# Add option for x-forward-for (real ip when behind elb)
	proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
	#set_real_ip_from 172.16.0.0/12;
	
	# block access to sensitive information about git
	location /.git {
           deny all;
           return 403;
    }

	# Service discovery 
	location = /.well-known/carddav {
		return 301 $scheme://$host/addressbookserver.php;
	}

	location = /.well-known/caldav {
		return 301 $scheme://$host/calendarserver.php;
	}

	#location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to index.html;
		#try_files $uri $uri/ /calendarserver.php?$args;
	#}

	# Handle addressbookserver.php sub project
	location /addressbookserver.php {
		try_files $uri $uri/ /addressbookserver.php?$uri&$args;
	}

	# Handle calendarserver.php
	location /calendarserver.php {
		try_files $uri $uri/ /calendarserver.php?$uri&$args;
	}

	location / {
		limit_req zone=by_ip burst=5;
		#rewrite ^/(.*)$ /$1?$args break;
		#try_files $uri $uri/=404;
		try_files $uri $uri/ /index.php?$args; 
	}

	location /phpinfo.php {
		limit_req zone=by_ip burst=5;
		#rewrite ^/(.*)$ /$1?$args break;
		#try_files $uri $uri/=404;
		try_files $uri $uri/ /phpinfo.php?$args; 
	}

	error_page 404 /404.html;
        location = /404.html {
                root /var/www/errors;
                internal;
        }

        location ^~ /sad.svg {
            alias /var/www/errors/sad.svg;
            access_log off;
        }
        location ^~ /twitter.svg {
            alias /var/www/errors/twitter.svg;
            access_log off;
        }
        location ^~ /gitlab.svg {
            alias /var/www/errors/gitlab.svg;
            access_log off;
        }

	# pass the PHP scripts to FastCGI server listening on socket
	#
	location ~ \.php$ {
        try_files $uri =404;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass unix:/var/run/php-fpm.sock;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    	fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_index index.php;
		#fastcgi_param GEOIP2_LONGITUDE $geoip2_data_longitude;
		#fastcgi_param GEOIP2_LATITUDE $geoip2_data_latitude;
		#fastcgi_param GEOIP2_CONTINENT_CODE $geoip2_data_continent_code;
		#fastcgi_param GEOIP2_CONTINENT_NAME $geoip2_data_continent_name;
		#fastcgi_param GEOIP2_COUNTRY_CODE $geoip2_data_country_code;
		#fastcgi_param GEOIP2_COUNTRY_NAME $geoip2_data_country_name;
		#fastcgi_param GEOIP2_STATE_CODE $geoip2_data_state_code;
		#fastcgi_param GEOIP2_STATE_NAME $geoip2_data_state_name;
		#fastcgi_param GEOIP2_CITY_NAME $geoip2_data_city_name;
		#fastcgi_param GEOIP2_POSTAL_CODE $geoip2_data_postal_code;
		include fastcgi_params;
	}

	location ~* \.(jpg|jpeg|gif|png|css|js|ico|webp|tiff|ttf|svg)$ {
		expires	5d;
	}

	# deny access to . files, for security
	#
	location ~ /\. {
    		log_not_found off; 
    		deny all;
	}
        
	location ^~ /.well-known {
		allow all;
		auth_basic off;
    }

}
